{"ast":null,"code":"var _jsxFileName = \"/Users/anismedini/Desktop/code-js/flashcard-quizz/src/App.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport FlashCardList from './FlashCardList';\nimport './app.css';\nimport axios from 'axios';\n\nfunction App() {\n  const [flashcards, setFlashcards] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const url = \"https://opentdb.com/api.php\";\n  const urlCat = \"https://opentdb.com/api_category.php\";\n  const categoryEl = useRef();\n  const amountEl = useRef();\n  useEffect(() => {\n    axios.get(urlCat).then(res => {\n      setCategories(res.data.trivia_categories);\n    });\n  }, []);\n\n  function decodeString(str) {\n    const textArea = document.createElement('textarea');\n    textArea.innerHTML = str;\n    return textArea.value;\n  }\n\n  function handelSubmit(e) {\n    e.preventDefault();\n    axios.get(url, {\n      params: {\n        amount: amountEl.current.value,\n        category: categoryEl.current.value\n      }\n    }).then(res => {\n      setFlashcards(res.data.results.map((questionItem, index) => {\n        const answer = decodeString(questionItem.correct_answer);\n        const options = [...questionItem.incorrect_answers.map(a => decodeString(a)), answer];\n        return {\n          id: `${index}-${Date.now()}`,\n          // to overchek it to be unique\n          question: decodeString(questionItem.question),\n          answer: questionItem.correct_answer,\n          options: options.sort(() => Math.random() - .5)\n        };\n      }));\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"header\",\n    onSubmit: handelSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"category\",\n    ref: categoryEl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, categories.map(category => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: category.id,\n      key: category.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, category.name);\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, \"Number of Questions\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    id: \"amount\",\n    min: \"1\",\n    step: \"1\",\n    defaultValue: 10,\n    ref: amountEl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \"Generate\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FlashCardList, {\n    flashcards: flashcards,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/anismedini/Desktop/code-js/flashcard-quizz/src/App.js"],"names":["React","useState","useEffect","useRef","FlashCardList","axios","App","flashcards","setFlashcards","categories","setCategories","url","urlCat","categoryEl","amountEl","get","then","res","data","trivia_categories","decodeString","str","textArea","document","createElement","innerHTML","value","handelSubmit","e","preventDefault","params","amount","current","category","results","map","questionItem","index","answer","correct_answer","options","incorrect_answers","a","id","Date","now","question","sort","Math","random","name"],"mappings":"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","sourcesContent":["import React, {useState,useEffect,useRef} from 'react';\nimport FlashCardList from './FlashCardList';\nimport './app.css'\nimport axios from 'axios'\n\nfunction App() {\n  const [flashcards, setFlashcards] = useState([])\n  const [categories, setCategories] = useState([])\n  const url = \"https://opentdb.com/api.php\"\n  const urlCat = \"https://opentdb.com/api_category.php\";\n  const categoryEl = useRef()\n  const amountEl = useRef()\n\n  useEffect(()=> {\n    axios.get(urlCat)\n    .then(res => {\n     setCategories(res.data.trivia_categories)\n    })\n  },[])\n\n\n\n  function decodeString(str) {\n    const textArea = document.createElement('textarea')\n    textArea.innerHTML = str\n    return textArea.value\n  }\n\n  function handelSubmit(e){\n    e.preventDefault();\n    axios.get(url,{\n      params:{\n        amount:amountEl.current.value,\n        category:categoryEl.current.value\n      }\n    })\n    .then(res=> {\n      setFlashcards(res.data.results.map((questionItem,index)=> {\n        const answer =  decodeString(questionItem.correct_answer)\n        const options = [...questionItem.incorrect_answers.map(a=> decodeString(a))\n          ,answer]\n        return {\n          id:`${index}-${Date.now()}`, // to overchek it to be unique\n          question:decodeString(questionItem.question),\n          answer:questionItem.correct_answer,\n          options:options.sort(()=> Math.random() - .5)\n        }\n      }))\n    })\n  }\n\n  return (\n    <>\n    <form className=\"header\" onSubmit={handelSubmit}>\n      <div className=\"form-group\">\n        <label htmlFor=\"category\">Category</label>\n        <select id=\"category\" ref={categoryEl}>\n          {categories.map(category => {\n            return  <option value={category.id} key={category.id}>{category.name}</option>\n          })}\n        </select>\n      </div>\n      <div className=\"form-group\">\n      <label htmlFor=\"amount\">Number of Questions</label>\n      <input type=\"number\" id=\"amount\" min=\"1\" step=\"1\" defaultValue={10} ref={amountEl}></input>\n      </div>\n      <div className=\"form-group\">\n            <button className=\"btn\">Generate</button>\n      </div>\n    </form>\n    <div className=\"container\">\n        <FlashCardList flashcards={flashcards}/>\n    </div>\n    </>\n  )\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}