{"ast":null,"code":"var _jsxFileName = \"/Users/anismedini/Desktop/code-js/flashcard-quizz/src/App.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport FlashCardList from './FlashCardList';\nimport './app.css';\nimport axios from 'axios';\n\nfunction App() {\n  const [flashcards, setFlashcards] = useState(SAMPLE_FLASHCARDS);\n  const url = \"https://opentdb.com/api.php?amount=10\";\n  const urlCat = \"https://opentdb.com/api_category.php\";\n  const categoryEl = useRef();\n  useEffect(() => {\n    axios.get(urlCat).then(res => {\n      console.log(res.data);\n    });\n  }, []);\n  useEffect(() => {\n    axios.get(url).then(res => {\n      setFlashcards(res.data.results.map((questionItem, index) => {\n        const answer = decodeString(questionItem.correct_answer);\n        const options = [...questionItem.incorrect_answers.map(a => decodeString(a)), answer];\n        return {\n          id: `${index}-${Date.now()}`,\n          // to overchek it to be unique\n          question: decodeString(questionItem.question),\n          answer: questionItem.correct_answer,\n          options: options.sort(() => Math.random() - .5)\n        };\n      }));\n    });\n  }, []);\n\n  function decodeString(str) {\n    const textArea = document.createElement('textarea');\n    textArea.innerHTML = str;\n    return textArea.value;\n  }\n\n  function handelSubmit(e) {\n    e.preventDefault();\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"header\",\n    onSubmit: handelSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"category\",\n    ref: categoryEl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FlashCardList, {\n    flashcards: flashcards,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  })));\n}\n\nconst SAMPLE_FLASHCARDS = [{\n  id: 1,\n  question: 'What is 2+2 ?',\n  answer: '4',\n  options: ['2', '3', '4', '5']\n}, {\n  id: 2,\n  question: 'Questions 2 ?',\n  answer: 'Answer',\n  options: ['Answer 1', 'Answer 2', 'Answer 3', 'Answer']\n}];\nexport default App;","map":{"version":3,"sources":["/Users/anismedini/Desktop/code-js/flashcard-quizz/src/App.js"],"names":["React","useState","useEffect","useRef","FlashCardList","axios","App","flashcards","setFlashcards","SAMPLE_FLASHCARDS","url","urlCat","categoryEl","get","then","res","console","log","data","results","map","questionItem","index","answer","decodeString","correct_answer","options","incorrect_answers","a","id","Date","now","question","sort","Math","random","str","textArea","document","createElement","innerHTML","value","handelSubmit","e","preventDefault"],"mappings":"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","sourcesContent":["import React, {useState,useEffect,useRef} from 'react';\nimport FlashCardList from './FlashCardList';\nimport './app.css'\nimport axios from 'axios'\n\nfunction App() {\n  const [flashcards, setFlashcards] = useState(SAMPLE_FLASHCARDS)\n  const url = \"https://opentdb.com/api.php?amount=10\"\n  const urlCat = \"https://opentdb.com/api_category.php\";\n  const categoryEl = useRef()\n  useEffect(()=> {\n    axios.get(urlCat)\n    .then(res => {\n      console.log(res.data)\n    })\n  },[])\n  useEffect(() => {\n    axios.get(url)\n    .then(res=> {\n      setFlashcards(res.data.results.map((questionItem,index)=> {\n        const answer =  decodeString(questionItem.correct_answer)\n        const options = [...questionItem.incorrect_answers.map(a=> decodeString(a))\n          ,answer]\n        return {\n          id:`${index}-${Date.now()}`, // to overchek it to be unique\n          question:decodeString(questionItem.question),\n          answer:questionItem.correct_answer,\n          options:options.sort(()=> Math.random() - .5)\n        }\n      }))\n    })\n\n  }, [])\n\n  function decodeString(str) {\n    const textArea = document.createElement('textarea')\n    textArea.innerHTML = str\n    return textArea.value\n  }\n\n  function handelSubmit(e){\n    e.preventDefault();\n\n  }\n  return (\n    <>\n    <form className=\"header\" onSubmit={handelSubmit}>\n      <div className=\"form-group\">\n        <label htmlFor=\"category\">Category</label>\n        <select id=\"category\" ref={categoryEl}></select>\n      </div>\n    </form>\n    <div className=\"container\">\n        <FlashCardList flashcards={flashcards}/>\n    </div>\n    </>\n  )\n}\nconst SAMPLE_FLASHCARDS = [\n  {\n    id:1,\n    question: 'What is 2+2 ?',\n    answer: '4',\n    options: [\n      '2',\n      '3',\n      '4',\n      '5'\n    ]\n  },\n  {\n    id:2,\n    question: 'Questions 2 ?',\n    answer: 'Answer',\n    options: [\n      'Answer 1',\n      'Answer 2',\n      'Answer 3',\n      'Answer'\n\n    ]\n  }\n]\nexport default App;\n"]},"metadata":{},"sourceType":"module"}