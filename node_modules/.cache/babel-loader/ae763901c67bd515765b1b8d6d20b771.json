{"ast":null,"code":"var _jsxFileName = \"/Users/anismedini/Desktop/code-js/flashcard-quizz/src/FlashCard.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport './app.css';\nexport default function FlashCard({\n  flashcard\n}) {\n  const [flip, setFlip] = useState(false);\n  const [height, setHeight] = useState('iniatial');\n  const frontEl = useRef();\n  const backEl = useRef();\n\n  function setMaxheight() {\n    const frontHeight = frontEl.current.getBoundingClientRect().height;\n    const backHeight = frontEl.current.getBoundingClientRect().height;\n    setHeight(Math.max(frontHeight, backHeight, 100));\n  }\n\n  useEffect(() => {}, [setMaxheight, flashcard.question, flashcard.answer, flashcard.options]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `card ${flip ? 'flip' : ''}`,\n    style: {\n      height: height\n    },\n    onClick: () => setFlip(!flip),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"front\",\n    ref: frontEl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, flashcard.question, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flashcard-options\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, flashcard.options.map(option => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flashcard-option\",\n      key: option,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 32\n      }\n    }, option);\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"back\",\n    ref: backEl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, flashcard.answer));\n}","map":{"version":3,"sources":["/Users/anismedini/Desktop/code-js/flashcard-quizz/src/FlashCard.js"],"names":["React","useState","useEffect","useRef","FlashCard","flashcard","flip","setFlip","height","setHeight","frontEl","backEl","setMaxheight","frontHeight","current","getBoundingClientRect","backHeight","Math","max","question","answer","options","map","option"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,EAAkCC,MAAlC,QAA+C,OAA/C;AACA,OAAO,WAAP;AAEA,eAAe,SAASC,SAAT,CAAmB;AAACC,EAAAA;AAAD,CAAnB,EAAgC;AAC3C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,UAAD,CAApC;AAEA,QAAMS,OAAO,GAAGP,MAAM,EAAtB;AACA,QAAMQ,MAAM,GAAGR,MAAM,EAArB;;AACA,WAASS,YAAT,GAAwB;AACpB,UAAMC,WAAW,GAAGH,OAAO,CAACI,OAAR,CAAgBC,qBAAhB,GAAwCP,MAA5D;AACA,UAAMQ,UAAU,GAAGN,OAAO,CAACI,OAAR,CAAgBC,qBAAhB,GAAwCP,MAA3D;AAEAC,IAAAA,SAAS,CAACQ,IAAI,CAACC,GAAL,CAASL,WAAT,EAAqBG,UAArB,EAAgC,GAAhC,CAAD,CAAT;AACH;;AAEDd,EAAAA,SAAS,CAAC,MAAK,CAEd,CAFQ,EAEP,CAACU,YAAD,EAAeP,SAAS,CAACc,QAAzB,EAAkCd,SAAS,CAACe,MAA5C,EAAmDf,SAAS,CAACgB,OAA7D,CAFO,CAAT;AAIA,sBACI;AACA,IAAA,SAAS,EAAG,QAAOf,IAAI,GAAE,MAAF,GAAW,EAAG,EADrC;AAEA,IAAA,KAAK,EAAE;AAACE,MAAAA,MAAM,EAACA;AAAR,KAFP;AAGA,IAAA,OAAO,EAAE,MAAKD,OAAO,CAAC,CAACD,IAAF,CAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII;AAAK,IAAA,SAAS,EAAC,OAAf;AAAuB,IAAA,GAAG,EAAEI,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,SAAS,CAACc,QADf,eAEI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKd,SAAS,CAACgB,OAAV,CAAkBC,GAAlB,CAAsBC,MAAM,IAAI;AAC7B,wBAAO;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAkC,MAAA,GAAG,EAAEA,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgDA,MAAhD,CAAP;AACH,GAFA,CADL,CAFJ,CAJJ,eAYQ;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,IAAA,GAAG,EAAEZ,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCN,SAAS,CAACe,MAA9C,CAZR,CADJ;AAgBH","sourcesContent":["import React,{useState,useEffect, useRef} from 'react'\nimport './app.css'\n\nexport default function FlashCard({flashcard}) {\n    const [flip, setFlip] = useState(false)\n    const [height, setHeight] = useState('iniatial')\n\n    const frontEl = useRef()\n    const backEl = useRef()\n    function setMaxheight() {\n        const frontHeight = frontEl.current.getBoundingClientRect().height\n        const backHeight = frontEl.current.getBoundingClientRect().height\n\n        setHeight(Math.max(frontHeight,backHeight,100))\n    }\n\n    useEffect(()=> {\n\n    },[setMaxheight, flashcard.question,flashcard.answer,flashcard.options])\n\n    return (\n        <div\n        className={`card ${flip? 'flip' : ''}`}\n        style={{height:height}}\n        onClick={()=> setFlip(!flip)}>\n            <div className=\"front\" ref={frontEl}>\n                {flashcard.question}\n                <div className=\"flashcard-options\">\n                    {flashcard.options.map(option => {\n                        return <div className=\"flashcard-option\" key={option}>{option}</div>\n                    })}\n                </div>\n            </div>\n                <div className=\"back\" ref={backEl}>{flashcard.answer}</div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}