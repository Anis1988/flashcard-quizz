{"version":3,"sources":["FlashCard.js","FlashCardList.js","App.js","index.js"],"names":["FlashCard","flashcard","useState","flip","setFlip","height","setHeight","frontEl","useRef","backEl","setMaxheight","frontHeight","current","getBoundingClientRect","backHeight","Math","max","useEffect","question","answer","options","window","addEventListener","removeEventListener","className","style","onClick","ref","map","option","key","FlashCardList","flashcards","id","App","setFlashcards","categories","setCategories","categoryEl","amountEl","decodeString","str","textArea","document","createElement","innerHTML","value","axios","get","then","res","data","trivia_categories","onSubmit","e","preventDefault","params","amount","category","results","questionItem","index","correct_answer","incorrect_answers","a","Date","now","sort","random","htmlFor","name","type","min","step","defaultValue","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7cc5b333.chunk.js","sourcesContent":["import React,{useState,useEffect, useRef} from 'react'\nimport './app.css'\n\nexport default function FlashCard({flashcard}) {\n    const [flip, setFlip] = useState(false)\n    const [height, setHeight] = useState('initial')\n\n\n    const frontEl = useRef()\n    const backEl = useRef()\n    function setMaxheight() {\n        const frontHeight = frontEl.current.getBoundingClientRect().height\n        const backHeight = backEl.current.getBoundingClientRect().height\n\n        setHeight(Math.max(frontHeight,backHeight,100))\n    }\n\n    useEffect(()=> {\n        setMaxheight()\n    },[flashcard.question,flashcard.answer,flashcard.options])\n    useEffect(()=> {\n        window.addEventListener('resize',setMaxheight)\n        return () => window.removeEventListener('resize',setMaxheight)\n    },[])\n\n    return (\n        <div\n        className={`card ${flip? 'flip' : ''}`}\n        style={{height:height}}\n        onClick={()=> setFlip(!flip)}>\n            <div className=\"front\" ref={frontEl}>\n                {flashcard.question}\n                <div className=\"flashcard-options\">\n                    {flashcard.options.map(option => {\n                        return <div className=\"flashcard-option\" key={option}>{option}</div>\n                    })}\n                </div>\n            </div>\n                <div className=\"back\" ref={backEl}>{flashcard.answer}</div>\n        </div>\n    )\n}\n","import React from 'react'\nimport FlashCard from './FlashCard'\nimport './app.css'\n\nexport default function FlashCardList({flashcards}) {\n    return (\n        <div className=\"card-grid\">\n            {flashcards.map(flashcard => {\n                return <FlashCard flashcard={flashcard} key={flashcard.id}/>\n            })}\n        </div>\n    )\n}\n","import React, {useState,useEffect,useRef} from 'react';\nimport FlashCardList from './FlashCardList';\nimport './app.css'\nimport axios from 'axios'\n\nfunction App() {\n  const [flashcards, setFlashcards] = useState([])\n  const [categories, setCategories] = useState([])\n  const url = \"https://opentdb.com/api.php\"\n  const urlCat = \"https://opentdb.com/api_category.php\";\n  const categoryEl = useRef()\n  const amountEl = useRef()\n\n  useEffect(()=> {\n    axios.get(urlCat)\n    .then(res => {\n     setCategories(res.data.trivia_categories)\n    })\n  },[])\n\n  function decodeString(str) {\n    const textArea = document.createElement('textarea')\n    textArea.innerHTML = str\n    return textArea.value\n  }\n\n  function handelSubmit(e){\n    e.preventDefault();\n    axios.get(url,{\n      params:{\n        amount:amountEl.current.value,\n        category:categoryEl.current.value\n      }\n    })\n    .then(res=> {\n      setFlashcards(res.data.results.map((questionItem,index)=> {\n        const answer =  decodeString(questionItem.correct_answer)\n        const options = [...questionItem.incorrect_answers.map(a=> decodeString(a))\n          ,answer]\n        return {\n          id:`${index}-${Date.now()}`, // to overchek it to be unique\n          question:decodeString(questionItem.question),\n          answer:questionItem.correct_answer,\n          options:options.sort(()=> Math.random() - .5)\n        }\n      }))\n    })\n  }\n\n  return (\n    <>\n    <form className=\"header\" onSubmit={handelSubmit}>\n      <div className=\"form-group\">\n        <label htmlFor=\"category\">Category</label>\n        <select id=\"category\" ref={categoryEl}>\n          {categories.map(category => {\n            return  <option value={category.id} key={category.id}>{category.name}</option>\n          })}\n        </select>\n      </div>\n      <div className=\"form-group\">\n      <label htmlFor=\"amount\">Number of Questions</label>\n      <input type=\"number\" id=\"amount\" min=\"1\" step=\"1\" defaultValue={10} ref={amountEl}></input>\n      </div>\n      <div className=\"form-group\">\n            <button className=\"btn\">Generate</button>\n      </div>\n    </form>\n    <div className=\"container\">\n        <FlashCardList flashcards={flashcards}/>\n    </div>\n    </>\n  )\n}\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}